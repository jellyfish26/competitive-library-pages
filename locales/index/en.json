{
    "en": {
        "welcome": "Welcome!",
        "first_description": "This site is a library for competitive programming by jellyfish26. If I'm not in the contest, feel free to use it. :)ã€€See the license below to use it. (The English translation is likely to be incorrect. If you can read Japanese, you might want to read the Japanese page.)",
        "use_site": "How to use this site",
        "use_site_description": "This site is very simple. Select the data structure or algorithm you want to see from the navigation on the left and it will show up!!! Groundbreaking! The navigation on the right side is under construction. Please see the navigation on the right for the schedule.",
        "use_site_description_2": "The source code is straight from the master branch in my Library repository, but I may not have updated the description on this page. (I think the library page is slower to update, because I update it on a whim.)",
        "information": "Information",
        "my_twitter": "My Twitter",
        "page_repo": "Repository for this page",
        "lib_repo": "Repository for library",
        "license": "License",
        "aboue_page": "About the library page",
        "page_license_description": "I have no idea about this page at the moment.",
        "about_library": "About the Library",
        "library_license_description": "If you don't have a lot of Verify, it may be buggy, but you can use it freely. It doesn't matter if I'm in the contest. However, please use the following copyright notice when you use it.",
        "index_classification": "Classification",
        "algorithms": [
            {
                "classification_name" : "Data Strcture",
                "description" : "As it is, it classifies data structures that can be handled at high speed, which are not in the standard library."
            },
            {
                "classification_name" : "Graph",
                "description" : "It categorizes those that deal with graph problems. In the future, we may categorize the problems with trees separately."
            },
            {
                "classification_name" : "Algorithm",
                "description" : "It classifies cumulative sums and so on."
            },
            {
                "classification_name" : "Mathematics",
                "description" : "Er, mathematics."
            },
            {
                "classification_name" : "Geometry",
                "description" : "Yes, it's geometry. Algebra might be in there too (I don't know any algebra problems)"
            },
            {
                "classification_name" : "Extended Graph",
                "description" : "It is the same as Custom, but it categorizes graph problems that are rarely used."
            },
            {
                "classification_name" : "Custom",
                "description" : "The data structures and algorithms that are rarely used are categorized here."
            },
            {
                "classification_name" : "Garbage",
                "description" : "You don't use it anymore. Either it's faster to implement it yourself than to bring it from the library and modify it, or it's"
            }
        ]
    }
}